<?xml version="1.0" encoding="utf-8"?>


<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-CN">
    <title type="text">心微憩</title>
    <subtitle type="html">世界虽大，心惟于一隅独憩</subtitle>
    <updated>2023-09-07T11:34:43&#43;08:00</updated>
    <id>https://SlippyJimmy.github.io/</id>
    <link rel="alternate" type="text/html" href="https://SlippyJimmy.github.io/" />
    <link rel="self" type="application/atom&#43;xml" href="https://SlippyJimmy.github.io/atom.xml" />
    <author>
            <name>SlippyJimmy</name>
            <uri>https://SlippyJimmy.github.io</uri>
            
                <email>1824968955@qq.com</email>
            </author>
    <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights>
    <generator uri="https://gohugo.io/" version="0.117.0">Hugo</generator>
        <entry>
            <title type="text">华硕FX50JX黑苹果Vertura13.5.1系统安装完善踩坑记录</title>
            <link rel="alternate" type="text/html" href="https://SlippyJimmy.github.io/posts/%E5%8D%8E%E7%A1%95fx50jx%E9%BB%91%E8%8B%B9%E6%9E%9Cvertura13.5.1%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E5%AE%8C%E5%96%84%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/" />
            <id>https://SlippyJimmy.github.io/posts/%E5%8D%8E%E7%A1%95fx50jx%E9%BB%91%E8%8B%B9%E6%9E%9Cvertura13.5.1%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E5%AE%8C%E5%96%84%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/</id>
            <updated>2023-09-07T10:13:55&#43;08:00</updated>
            <published>2023-09-06T10:35:46&#43;08:00</published>
            <author>
                    <name>SlippyJimmy</name>
                    <uri>https://io-oi.me/</uri>
                    <email>1824968955@qq.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">电脑配置 CPU Intel i5 4200H 显卡： 集显：HD4600 独显：NVIDIA 950M(不可用) 内存：4……</summary>
            
                <content type="html">&lt;h2 id=&#34;电脑配置&#34;&gt;电脑配置&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;CPU Intel i5 4200H&lt;/li&gt;
&lt;li&gt;显卡：
&lt;ul&gt;
&lt;li&gt;集显：HD4600&lt;/li&gt;
&lt;li&gt;独显：NVIDIA 950M(不可用)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;内存：4GB板载 + KingSton 4GB DDR3 1333MHz&lt;/li&gt;
&lt;li&gt;硬盘 Intel 545S 256G SSD&lt;/li&gt;
&lt;li&gt;网卡：原装蓝牙不可用，更换为BCM943225HMB&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;正常工作&#34;&gt;正常工作&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 睡眠&amp;amp;唤醒&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 触摸板&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Fn快捷键&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; CPU变频&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 亮度调节&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; HDMI输出&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; WIFI&amp;amp;蓝牙&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 音频&amp;amp;麦克风&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;参考配置&#34;&gt;参考配置&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jonalinux/Hackintosh-Asus-X550JX&#34;&gt;参考EFI&lt;/a&gt;
该EFI支持11，12，13系统，本人使用该EFI的&lt;code&gt;EFI-ventura.zip&lt;/code&gt;文件进行配置&lt;/p&gt;
&lt;p&gt;优化后EFI下载地址:&lt;a href=&#34;https://github.com/SlippyJimmy/Asus-FX50JX-Hackintosh&#34;&gt;Asus-FX50JX-Hackintosh&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;安装后，声卡、网卡蓝牙及核显驱动存在问题，下面一一解决&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注：本人OpenCore版本为0.6.1,后续使用OCC保持版本一致&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;亮度调节&#34;&gt;亮度调节&lt;/h3&gt;
&lt;p&gt;pass&lt;/p&gt;
&lt;h3 id=&#34;声卡驱动&#34;&gt;声卡驱动&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jonalinux/Hackintosh-Asus-X550JX/tree/main&#34;&gt;参考教程&lt;/a&gt;，使用Hackintool将&lt;code&gt;voodooHDA.kext&lt;/code&gt;安装到&lt;code&gt;L / E (Library / Extensions)&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;网卡蓝牙驱动&#34;&gt;网卡&amp;amp;蓝牙驱动&lt;/h3&gt;
&lt;p&gt;若为原装网卡，可使用参考EFI自行测试,如果是更换了其他网卡，可参考下面教程进行驱动&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1de4y1X7mp&#34;&gt;参考教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;网卡蓝牙可以驱动，显示支持隔空投送，但实现不了&lt;/p&gt;
&lt;h3 id=&#34;核显驱动&#34;&gt;核显驱动&lt;/h3&gt;
&lt;p&gt;问题描述：核显仅为7M，画面很卡&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://imacos.top/2022/09/26/2310/&#34;&gt;参考教程&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;cpu睿频&#34;&gt;CPU睿频&lt;/h3&gt;
&lt;p&gt;使用工具：CPU-S、Hackintool
&lt;a href=&#34;https://www.bilibili.com/video/BV143411F7aJ&#34;&gt;参考教程&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;花屏&#34;&gt;花屏&lt;/h3&gt;
&lt;p&gt;问题描述：开机二阶段分裂成8个苹果，进入系统后花屏&lt;/p&gt;
&lt;p&gt;解决方案：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;bios中打开CSM（会导致开机一阶段图标变大的问题）&lt;/li&gt;
&lt;li&gt;自定义EDID（待尝试）&lt;/li&gt;
&lt;/ol&gt;
</content>
            
            
            
            
            
                
                    
                
                    
                
            
        </entry>
    
        <entry>
            <title type="text">开发环境搭建</title>
            <link rel="alternate" type="text/html" href="https://SlippyJimmy.github.io/posts/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/" />
            <id>https://SlippyJimmy.github.io/posts/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</id>
            <updated>2023-09-07T11:34:05&#43;08:00</updated>
            <published>2022-12-15T17:17:43&#43;08:00</published>
            <author>
                    <name>SlippyJimmy</name>
                    <uri>https://io-oi.me/</uri>
                    <email>1824968955@qq.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">开发环境搭建 基于glepnir 一、安装前准备工作 安装ClashX并配置科学上网 配置终……</summary>
            
                <content type="html">&lt;h1 id=&#34;开发环境搭建&#34;&gt;开发环境搭建&lt;/h1&gt;
&lt;p&gt;基于&lt;a href=&#34;https://github.com/glepnir/dotfiles&#34;&gt;glepnir&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;一安装前准备工作&#34;&gt;一、安装前准备工作&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;安装ClashX并配置科学上网&lt;/li&gt;
&lt;li&gt;配置终端网络代理&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;export https_proxy=http://127.0.0.1:7890 http_proxy=http://127.0.0.1:7890 all_proxy=socks5://127.0.0.1:7890
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;二安装dotfiles&#34;&gt;二、安装dotfiles&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;clone dotfiles并安装&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/SlippyJimmy/dotfiles&#34;&gt;mydotfiles&lt;/a&gt;&lt;/p&gt;
</content>
            
            
            
            
            
                
                    
                
                    
                
            
        </entry>
    
        <entry>
            <title type="text">Markdown语法测试--以surfingkeys为例</title>
            <link rel="alternate" type="text/html" href="https://SlippyJimmy.github.io/posts/markdown%E8%AF%AD%E6%B3%95%E6%B5%8B%E8%AF%95--%E4%BB%A5surfingkeys%E4%B8%BA%E4%BE%8B/" />
            <id>https://SlippyJimmy.github.io/posts/markdown%E8%AF%AD%E6%B3%95%E6%B5%8B%E8%AF%95--%E4%BB%A5surfingkeys%E4%B8%BA%E4%BE%8B/</id>
            <updated>2023-09-07T11:34:36&#43;08:00</updated>
            <published>2020-01-01T18:52:11&#43;08:00</published>
            <author>
                    <name>SlippyJimmy</name>
                    <uri>https://io-oi.me/</uri>
                    <email>1824968955@qq.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">Surfingkeys -- 用 javascript 和键盘扩展你的 chrome Surfingkeys 和现有的一些插件一样，让你尽可能的通过键盘来使用 Chrome/Firefox 浏览器，……</summary>
            
                <content type="html">&lt;h1 id=&#34;surfingkeys----用-javascript-和键盘扩展你的-chrome&#34;&gt;Surfingkeys -- 用 javascript 和键盘扩展你的 chrome&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/brookhong/Surfingkeys/actions?query=workflow%3A%22Node+CI%22+branch%3Amaster&#34;&gt;&lt;img src=&#34;https://github.com/brookhong/Surfingkeys/workflows/Node%20CI/badge.svg?branch=master&#34; alt=&#34;Node CI&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Surfingkeys 和现有的一些插件一样，让你尽可能的通过键盘来使用 Chrome/Firefox 浏览器，比如跳转网页，上下左右滚屏。但不只是给 vim 用户使用，Surfingkeys 的基本特性是让你自己写一段 Javascript 脚本，然后通过&lt;code&gt;mapkey&lt;/code&gt;映射到某些按键。之后当你按了那几个键以后，对应的 Javascript 脚本就会被执行。&lt;/p&gt;
&lt;p&gt;Surfingkeys 的配置全部写在一段 javascript 中，很容易添加自己的映射按键。如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mapkey(&#39;&amp;lt;Ctrl-y&amp;gt;&#39;, &#39;Show me the money&#39;, function() {
    Front.showPopup(&#39;a well-known phrase uttered by characters in the 1996 film Jerry Maguire (Escape to close).&#39;);
});
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Surfingkeys 从 0.9.15 开始支持火狐（需要 57 以上的版本），但目前下面的功能在火狐下不工作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;同步不同设备间的设置&lt;/li&gt;
&lt;li&gt;代理设置&lt;/li&gt;
&lt;li&gt;Markdown 预览&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://SlippyJimmy.github.io/posts/markdown%E8%AF%AD%E6%B3%95%E6%B5%8B%E8%AF%95--%E4%BB%A5surfingkeys%E4%B8%BA%E4%BE%8B/#%E9%85%8D%E7%BD%AE%E5%8F%82%E8%80%83&#34;&gt;配置参考&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://video.weibo.com/show?fid=1034:09ef299edbed112e9c0a66a18ffb3463&#34;&gt;演示&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;目录&#34;&gt;目录&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://SlippyJimmy.github.io/posts/markdown%E8%AF%AD%E6%B3%95%E6%B5%8B%E8%AF%95--%E4%BB%A5surfingkeys%E4%B8%BA%E4%BE%8B/#%E5%8A%9F%E8%83%BD%E7%89%B9%E6%80%A7&#34;&gt;功能特性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://SlippyJimmy.github.io/posts/markdown%E8%AF%AD%E6%B3%95%E6%B5%8B%E8%AF%95--%E4%BB%A5surfingkeys%E4%B8%BA%E4%BE%8B/#%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B&#34;&gt;快速上手&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://SlippyJimmy.github.io/posts/markdown%E8%AF%AD%E6%B3%95%E6%B5%8B%E8%AF%95--%E4%BB%A5surfingkeys%E4%B8%BA%E4%BE%8B/#%E6%89%93%E5%BC%80%E8%BF%9E%E6%8E%A5&#34;&gt;打开连接&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://SlippyJimmy.github.io/posts/markdown%E8%AF%AD%E6%B3%95%E6%B5%8B%E8%AF%95--%E4%BB%A5surfingkeys%E4%B8%BA%E4%BE%8B/#surfingkeys%E6%94%AF%E6%8C%81%E7%9A%84%E6%A8%A1%E5%BC%8F&#34;&gt;Surfingkeys 支持的模式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://SlippyJimmy.github.io/posts/markdown%E8%AF%AD%E6%B3%95%E6%B5%8B%E8%AF%95--%E4%BB%A5surfingkeys%E4%B8%BA%E4%BE%8B/#%E6%90%9C%E7%B4%A2%E6%A0%8F&#34;&gt;搜索栏&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://SlippyJimmy.github.io/posts/markdown%E8%AF%AD%E6%B3%95%E6%B5%8B%E8%AF%95--%E4%BB%A5surfingkeys%E4%B8%BA%E4%BE%8B/#%E6%90%9C%E7%B4%A2%E9%80%89%E4%B8%AD%E6%96%87%E6%9C%AC&#34;&gt;搜索选中文本&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://SlippyJimmy.github.io/posts/markdown%E8%AF%AD%E6%B3%95%E6%B5%8B%E8%AF%95--%E4%BB%A5surfingkeys%E4%B8%BA%E4%BE%8B/#%E7%B1%BBvim%E6%A0%87%E7%A4%BA&#34;&gt;类 vim 标示&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://SlippyJimmy.github.io/posts/markdown%E8%AF%AD%E6%B3%95%E6%B5%8B%E8%AF%95--%E4%BB%A5surfingkeys%E4%B8%BA%E4%BE%8B/#%E5%88%87%E6%8D%A2%E6%A0%87%E7%AD%BE%E9%A1%B5&#34;&gt;切换标签页&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://SlippyJimmy.github.io/posts/markdown%E8%AF%AD%E6%B3%95%E6%B5%8B%E8%AF%95--%E4%BB%A5surfingkeys%E4%B8%BA%E4%BE%8B/#%E5%91%BD%E4%BB%A4&#34;&gt;命令&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://SlippyJimmy.github.io/posts/markdown%E8%AF%AD%E6%B3%95%E6%B5%8B%E8%AF%95--%E4%BB%A5surfingkeys%E4%B8%BA%E4%BE%8B/#%E9%A1%BA%E6%BB%91%E6%BB%9A%E5%8A%A8&#34;&gt;顺滑滚动&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://SlippyJimmy.github.io/posts/markdown%E8%AF%AD%E6%B3%95%E6%B5%8B%E8%AF%95--%E4%BB%A5surfingkeys%E4%B8%BA%E4%BE%8B/#%E4%BC%9A%E8%AF%9D%E7%AE%A1%E7%90%86&#34;&gt;会话管理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://SlippyJimmy.github.io/posts/markdown%E8%AF%AD%E6%B3%95%E6%B5%8B%E8%AF%95--%E4%BB%A5surfingkeys%E4%B8%BA%E4%BE%8B/#%E5%89%8D%E7%BC%80%E6%95%B0%E5%AD%97%E5%8F%AF%E5%A4%9A%E6%AC%A1%E9%87%8D%E5%A4%8D%E7%9B%B8%E5%BA%94%E6%93%8D%E4%BD%9C&#34;&gt;前缀数字可多次重复相应操作&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://SlippyJimmy.github.io/posts/markdown%E8%AF%AD%E6%B3%95%E6%B5%8B%E8%AF%95--%E4%BB%A5surfingkeys%E4%B8%BA%E4%BE%8B/#%E5%BC%80%E5%85%B3%E7%83%AD%E9%94%AE&#34;&gt;开关热键&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://SlippyJimmy.github.io/posts/markdown%E8%AF%AD%E6%B3%95%E6%B5%8B%E8%AF%95--%E4%BB%A5surfingkeys%E4%B8%BA%E4%BE%8B/#%E4%BB%A3%E7%90%86%E8%AE%BE%E7%BD%AE&#34;&gt;代理设置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://SlippyJimmy.github.io/posts/markdown%E8%AF%AD%E6%B3%95%E6%B5%8B%E8%AF%95--%E4%BB%A5surfingkeys%E4%B8%BA%E4%BE%8B/#vim%E7%BC%96%E8%BE%91%E5%99%A8%E6%88%96%E8%80%85emacs%E7%BC%96%E8%BE%91%E5%99%A8&#34;&gt;VIM 编辑器或者 Emacs 编辑器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://SlippyJimmy.github.io/posts/markdown%E8%AF%AD%E6%B3%95%E6%B5%8B%E8%AF%95--%E4%BB%A5surfingkeys%E4%B8%BA%E4%BE%8B/#%E7%82%B9%E5%91%BD%E4%BB%A4%E9%87%8D%E5%A4%8D%E5%89%8D%E4%B8%80%E4%B8%AA%E6%93%8D%E4%BD%9C&#34;&gt;点命令重复前一个操作&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://SlippyJimmy.github.io/posts/markdown%E8%AF%AD%E6%B3%95%E6%B5%8B%E8%AF%95--%E4%BB%A5surfingkeys%E4%B8%BA%E4%BE%8B/#markdown%E9%A2%84%E8%A7%88&#34;&gt;Markdown 预览&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://SlippyJimmy.github.io/posts/markdown%E8%AF%AD%E6%B3%95%E6%B5%8B%E8%AF%95--%E4%BB%A5surfingkeys%E4%B8%BA%E4%BE%8B/#%E6%88%AA%E5%B1%8F&#34;&gt;截屏&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://SlippyJimmy.github.io/posts/markdown%E8%AF%AD%E6%B3%95%E6%B5%8B%E8%AF%95--%E4%BB%A5surfingkeys%E4%B8%BA%E4%BE%8B/#mermaid%E5%9B%BE%E5%BD%A2%E7%94%9F%E6%88%90%E5%99%A8&#34;&gt;mermaid 图形生成器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://SlippyJimmy.github.io/posts/markdown%E8%AF%AD%E6%B3%95%E6%B5%8B%E8%AF%95--%E4%BB%A5surfingkeys%E4%B8%BA%E4%BE%8B/#pdf%E9%98%85%E8%AF%BB%E5%99%A8&#34;&gt;PDF 阅读器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://SlippyJimmy.github.io/posts/markdown%E8%AF%AD%E6%B3%95%E6%B5%8B%E8%AF%95--%E4%BB%A5surfingkeys%E4%B8%BA%E4%BE%8B/#%E9%85%8D%E7%BD%AE%E5%8F%82%E8%80%83&#34;&gt;配置参考&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://SlippyJimmy.github.io/posts/markdown%E8%AF%AD%E6%B3%95%E6%B5%8B%E8%AF%95--%E4%BB%A5surfingkeys%E4%B8%BA%E4%BE%8B/#%E7%BC%96%E8%AF%91&#34;&gt;编译&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://SlippyJimmy.github.io/posts/markdown%E8%AF%AD%E6%B3%95%E6%B5%8B%E8%AF%95--%E4%BB%A5surfingkeys%E4%B8%BA%E4%BE%8B/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;功能特性&#34;&gt;功能特性&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;所有配置都用 javascript 描述，易于修改添加自己的按键。&lt;/li&gt;
&lt;li&gt;一个大号光标，这样 visual mode 不会太痛苦。&lt;/li&gt;
&lt;li&gt;搜索选中文本，在 normal mode 和 visual mode 都好用。&lt;/li&gt;
&lt;li&gt;自动生成帮助信息。&lt;/li&gt;
&lt;li&gt;在 visual mode 下，按&lt;code&gt;*&lt;/code&gt; 可以搜索当前单词。&lt;/li&gt;
&lt;li&gt;滚动操作（像&lt;code&gt;e&lt;/code&gt; &lt;code&gt;d&lt;/code&gt;上下翻页之类）可以在顶层页面工作，也可以在一个支持滚动的 DIV 中使用。&lt;/li&gt;
&lt;li&gt;在一个有多个 frame 的页面中，&lt;code&gt;w&lt;/code&gt;可以切换 frame。&lt;/li&gt;
&lt;li&gt;会话管理。&lt;/li&gt;
&lt;li&gt;一个多功能书签地址栏&lt;/li&gt;
&lt;li&gt;前缀数字可多次重复相应操作&lt;/li&gt;
&lt;li&gt;使用 VIM 编辑页面上各种输入框&lt;/li&gt;
&lt;li&gt;点命令重复前一个操作&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sm&lt;/code&gt;预览 markdown&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;Ctrl-Alt-d&amp;gt;&lt;/code&gt;打开图形生成器&lt;/li&gt;
&lt;li&gt;插入模式下的表情下拉选项&lt;/li&gt;
&lt;li&gt;按键实时提示&lt;/li&gt;
&lt;li&gt;所有按键对 PDF 适用&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;快速上手&#34;&gt;快速上手&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chrome.google.com/webstore/detail/surfingkeys/gfbliohnnapiefjpjlpjnehglfpaknnc&#34;&gt;Chrome 插件安装地址&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://addons.mozilla.org/en-US/firefox/addon/surfingkeys_ff/&#34;&gt;Firefox 插件安装地址&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;安装本插件以后，打开你要访问的站点。先按&lt;code&gt;?&lt;/code&gt;或者&lt;code&gt;u&lt;/code&gt;看看帮助信息，按&lt;code&gt;Esc&lt;/code&gt;可以关掉帮助信息。&lt;/p&gt;
&lt;p&gt;试试帮助信息里的那些按键，比如，&lt;code&gt;e&lt;/code&gt;向上翻页，&lt;code&gt;d&lt;/code&gt;向下翻页，&lt;code&gt;se&lt;/code&gt;打开设置。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;?&lt;/code&gt; 显示帮助
&lt;img src=&#34;https://cloud.githubusercontent.com/assets/288207/16181995/1417ca44-36d4-11e6-96c9-9e84b33f0916.png&#34; alt=&#34;help&#34;&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;t&lt;/code&gt; 搜索收藏夹和访问历史
&lt;img src=&#34;https://cloud.githubusercontent.com/assets/288207/16182031/58e15ec4-36d4-11e6-9cc5-ff35970df25f.png&#34; alt=&#34;urls&#34;&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/&lt;/code&gt; 在当前页查找
&lt;img src=&#34;https://cloud.githubusercontent.com/assets/288207/16182044/65f4713c-36d4-11e6-9e21-6b61a858f080.png&#34; alt=&#34;find&#34;&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;f&lt;/code&gt; 拨号打开链接
&lt;img src=&#34;https://cloud.githubusercontent.com/assets/288207/16182118/18d27678-36d5-11e6-9759-d8b5ff49930c.png&#34; alt=&#34;follow&#34;&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;v&lt;/code&gt; 切换文本选择模式
&lt;img src=&#34;https://cloud.githubusercontent.com/assets/288207/16182120/1cc536da-36d5-11e6-9e08-293cdb8fbcd2.png&#34; alt=&#34;visual&#34;&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;T&lt;/code&gt; 切换标签页
&lt;img src=&#34;https://cloud.githubusercontent.com/assets/288207/10328839/f0143ffe-6ceb-11e5-8eee-962db94b2c22.png&#34; alt=&#34;tabs&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;打开连接&#34;&gt;打开连接&lt;/h2&gt;
&lt;p&gt;默认的拨号键有&lt;code&gt;asdfgqwertzxcvb&lt;/code&gt;，如果按了一个非拨号键，会自动退出拨号。下面的设置可以改成右手习惯：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Hints.characters = &#39;yuiophjklnm&#39;; // for right hand
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;当拨号盘有重叠上，可以按&lt;code&gt;Shift&lt;/code&gt;翻转重叠的拨号盘。按住空格键可隐藏拨号盘，松开恢复。&lt;/p&gt;
&lt;p&gt;所有拨号放在目标链接的中间，你可以用下面的设置让它们靠左对齐：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;settings.hintAlign = &amp;quot;left&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;surfingkeys-支持的模式&#34;&gt;Surfingkeys 支持的模式&lt;/h2&gt;
&lt;p&gt;Surfingkeys 有三种模式：normal，visual 和 insert。&lt;/p&gt;
&lt;h3 id=&#34;normal-mode默认模式&#34;&gt;Normal mode，默认模式&lt;/h3&gt;
&lt;p&gt;当你打开一个页面时，自动进入该模式。通过函数&lt;code&gt;mapkey&lt;/code&gt;添加的所有按键都只在这种模式下有用。&lt;/p&gt;
&lt;h3 id=&#34;visual-mode用于选中文本以及各种针对选中文本的操作&#34;&gt;Visual mode，用于选中文本，以及各种针对选中文本的操作&lt;/h3&gt;
&lt;p&gt;除了通过函数&lt;code&gt;vmapkey&lt;/code&gt;添加的所有按键在这种模式下有用，此外还有一些内置类似 vim 的按键，如&lt;code&gt;j&lt;/code&gt; &lt;code&gt;k&lt;/code&gt; &lt;code&gt;h&lt;/code&gt; &lt;code&gt;l&lt;/code&gt; &lt;code&gt;b&lt;/code&gt; &lt;code&gt;w``0&lt;/code&gt; &lt;code&gt;$&lt;/code&gt;等。&lt;/p&gt;
&lt;p&gt;按&lt;code&gt;v&lt;/code&gt;可以切换 visual mode。在 visual mode 下，你会在页面底部看到一个提示 -- &lt;code&gt;Caret&lt;/code&gt;或者&lt;code&gt;Range&lt;/code&gt;，页面中还有一个大号的光标。光标做得这么大，是让人在页面中好找到它。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Caret&lt;/code&gt; 表明当你按 jkhl 时会移动光标，&lt;code&gt;Range&lt;/code&gt;则表明你移动光标会选择文本。下面有个小练习：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;按下&lt;code&gt;v&lt;/code&gt;，确认你能看到&lt;code&gt;Caret&lt;/code&gt;提示和光标。&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;j&lt;/code&gt; &lt;code&gt;k&lt;/code&gt; &lt;code&gt;h&lt;/code&gt; &lt;code&gt;l&lt;/code&gt; &lt;code&gt;b&lt;/code&gt; &lt;code&gt;w``0&lt;/code&gt; &lt;code&gt;$&lt;/code&gt;试试移动光标。&lt;/li&gt;
&lt;li&gt;再按下&lt;code&gt;v&lt;/code&gt;，确认你看到&lt;code&gt;Range&lt;/code&gt;提示。&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;j&lt;/code&gt; &lt;code&gt;k&lt;/code&gt; &lt;code&gt;h&lt;/code&gt; &lt;code&gt;l&lt;/code&gt; &lt;code&gt;b&lt;/code&gt; &lt;code&gt;w``0&lt;/code&gt; &lt;code&gt;$&lt;/code&gt;试试选中文本。&lt;/li&gt;
&lt;li&gt;按下&lt;code&gt;sg&lt;/code&gt;看看发生了什么。&lt;/li&gt;
&lt;li&gt;再按下&lt;code&gt;v&lt;/code&gt;回到 normal mode。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/288207/17644215/759f1e70-61b3-11e6-8bf8-0bdff7d0c933.gif&#34; alt=&#34;search_selected&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;zz&lt;/code&gt; 让光标位于窗口中间行。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;f&lt;/code&gt; 往前查找下一个字符。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;F&lt;/code&gt; 往后查找下一个字符。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;;&lt;/code&gt; 重复最后的&lt;code&gt;f&lt;/code&gt;/&lt;code&gt;F&lt;/code&gt;操作。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;,&lt;/code&gt; 反向重复最后的&lt;code&gt;f&lt;/code&gt;/&lt;code&gt;F&lt;/code&gt;操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;insert-mode&#34;&gt;Insert mode&lt;/h3&gt;
&lt;p&gt;当输入焦点定位到各类输入框时（无论你是通过&lt;code&gt;i&lt;/code&gt;或&lt;code&gt;f&lt;/code&gt;选择定位还是鼠标点击定位的），就进入该模式。
通过函数&lt;code&gt;imapkey&lt;/code&gt;添加的所有按键都只在这种模式下有用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl - i&lt;/code&gt; 打开 vim 编辑器。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl - &#39;&lt;/code&gt; 把输入框里的内容用双引号引起来或去除双引号，方便在搜索引擎页面上搜索时使用。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl-e&lt;/code&gt;移动光标到行尾。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl-f&lt;/code&gt; 移动光标到行首。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl-u&lt;/code&gt; 删除光标前所有输入。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Alt-b&lt;/code&gt; 移动光标到后一个词。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Alt-f&lt;/code&gt; 移动光标到前一个词。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Alt-w&lt;/code&gt; 往后删除一个词。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Alt-d&lt;/code&gt; 往前删除一个词。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;imap&lt;/code&gt; 和 &lt;code&gt;iunmap&lt;/code&gt;：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;imap(&#39;,,&#39;, &amp;quot;&amp;lt;Esc&amp;gt;&amp;quot;);        // 按两次逗号退出当前输入框。
imap(&#39;;;&#39;, &amp;quot;&amp;lt;Ctrl-&#39;&amp;gt;&amp;quot;);     // 按两次分号切换双引号。
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;表情下拉选项&#34;&gt;表情下拉选项&lt;/h4&gt;
&lt;p&gt;当用户在插入模式下输入一个冒号跟着两个字符（2 是通过&lt;code&gt;settings.startToShowEmoji&lt;/code&gt;设置的）时，如&lt;code&gt;:gr&lt;/code&gt;，Surfingkeys 会列出相应的表情。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/288207/23602453/924ed762-028b-11e7-86f3-bf315c0a2499.gif&#34; alt=&#34;emoji&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果你不喜欢这个功能，可以用以下设置禁用：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;iunmap(&amp;quot;:&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果你希望按下冒号后立刻出现表情下拉选项，可以用以下设置：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;settings.startToShowEmoji = 0;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/brookhong/Surfingkeys/blob/master/pages/emoji.tsv&#34;&gt;表情符号完整列表&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;查找&#34;&gt;查找&lt;/h3&gt;
&lt;p&gt;查找不是模式，但是它会让你自动进入 visual mode. 按&lt;code&gt;/&lt;/code&gt;打开查找栏，输入你要查找的文字，你会看到所有匹配的文字会被高亮。按回车完成查找，这时你会自动进入 visual mode -- &lt;code&gt;Caret&lt;/code&gt;。按&lt;code&gt;n&lt;/code&gt;定位下一个，&lt;code&gt;N&lt;/code&gt;定位前一个。&lt;/p&gt;
&lt;p&gt;按&lt;code&gt;Ctrl-Enter&lt;/code&gt;查找完整的单词，就像输入&lt;code&gt;\bkeyword\b&lt;/code&gt;一样。&lt;/p&gt;
&lt;h3 id=&#34;passthrough-mode&#34;&gt;PassThrough mode&lt;/h3&gt;
&lt;p&gt;按&lt;code&gt;Alt-i&lt;/code&gt;进入 PassThrough 模式可让你暂时放弃 SurfingKeys，这时 SurfingKeys 所有按键不再有用，直到你按&lt;code&gt;Esc&lt;/code&gt;退出 PassThrough 模式。在该模式下，你可以充分使用任何网站本身提供的快捷键。请参考&lt;a href=&#34;https://github.com/brookhong/Surfingkeys/issues/656&#34;&gt;Feature Request: implement Vimium-style insert mode · Issue #656&lt;/a&gt;了解为什么引入这种模式以及它与&lt;code&gt;Alt-s&lt;/code&gt;的区别。&lt;/p&gt;
&lt;p&gt;按&lt;code&gt;p&lt;/code&gt;进入一个短暂的 PassThrough 模式，它在一秒后会自动退出。如果默认设置的 1 秒超时不适合你的情况，可以在你的设置脚本里这样写改为 1500 毫秒：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mapkey(&#39;p&#39;, &#39;#0enter ephemeral PassThrough mode to temporarily suppress SurfingKeys&#39;, function() {
    Normal.passThrough(1500);
});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;搜索栏&#34;&gt;搜索栏&lt;/h2&gt;
&lt;p&gt;一些需要用户输入的功能通过搜索栏提供，比如&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用&lt;code&gt;t&lt;/code&gt;打开网页（从收藏夹或访问历史）&lt;/li&gt;
&lt;li&gt;用&lt;code&gt;b&lt;/code&gt;打开收藏夹&lt;/li&gt;
&lt;li&gt;用&lt;code&gt;og&lt;/code&gt;/&lt;code&gt;ob&lt;/code&gt;等打开搜索引擎&lt;/li&gt;
&lt;li&gt;用&lt;code&gt;:&lt;/code&gt;打开命令模式&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;搜索栏按键&#34;&gt;搜索栏按键&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Enter&lt;/code&gt; 打开选中项并关闭搜索栏。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl-Enter&lt;/code&gt; 打开选中项，但不关闭搜索栏，你可以继续选中打开。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Shift-Enter&lt;/code&gt; 在当前标签页打开选中项并关闭搜索栏。如果你希望默认就在当前标签页打开，可以使用&lt;code&gt;go&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Tab&lt;/code&gt; 在结果列表中向下切换。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Shift-Tab&lt;/code&gt; 在结果列表中向上切换。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl-.&lt;/code&gt; 显示下一页搜索结果&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl-,&lt;/code&gt; 显示上一页搜索结果&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl-c&lt;/code&gt; 复制当前列出的结果&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用&lt;code&gt;t&lt;/code&gt;打开搜索栏时，&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Ctrl - d&lt;/code&gt; 可以从收藏夹或访问历史中删除选中项。&lt;/p&gt;
&lt;p&gt;用&lt;code&gt;b&lt;/code&gt;打开搜索栏时，&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Ctrl - Shift - &amp;lt;any letter&amp;gt;&lt;/code&gt; 创建相应的类似 vim 标示。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/288207/17644214/759ef1d4-61b3-11e6-9bd9-70c38c8b80e0.gif&#34; alt=&#34;search_engine&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cmap&lt;/code&gt;用于搜索栏修改按键，如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cmap(&#39;&amp;lt;Ctrl-n&amp;gt;&#39;, &#39;&amp;lt;Tab&amp;gt;&#39;);
cmap(&#39;&amp;lt;Ctrl-p&amp;gt;&#39;, &#39;&amp;lt;Shift-Tab&amp;gt;&#39;);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;添加书签&#34;&gt;添加书签&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ab&lt;/code&gt;可以把当前页加入书签。按&lt;code&gt;ab&lt;/code&gt;后，搜索栏会弹出来让你选择放到哪个目录。如果你希望放到一个新建目录下面，可以输入新的目录名，&lt;strong&gt;并以&lt;code&gt;/&lt;/code&gt;结尾&lt;/strong&gt;，比如我选中了&lt;code&gt;/Bookmarks Bar/tool/&lt;/code&gt;，然后在后面输入&lt;code&gt;abc/&lt;/code&gt;，会把当前页加到&lt;code&gt;/Bookmarks Bar/tool/abc/&lt;/code&gt;这个目录里。如果&lt;code&gt;abc&lt;/code&gt;后面没有&lt;code&gt;/&lt;/code&gt;，&lt;code&gt;abc&lt;/code&gt;会被当作新建书签的标题保存。&lt;/p&gt;
&lt;h2 id=&#34;搜索选中文本&#34;&gt;搜索选中文本&lt;/h2&gt;
&lt;p&gt;从使用 Firefox 时起，我就必装的一个插件。无论 Firefox 还是 Chrome，我用的插件都是通过右键菜单来实现的。Surfingkeys 则通过按键来实现。默认情况下，当你在 normal mode 下按&lt;code&gt;sg&lt;/code&gt;，Surfingkeys 会打开 google 搜索选中文本，如果没有文字被选中，则搜索系统剪贴板里面的文字。在 visual mode 下，它只会搜索选中文本。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sg&lt;/code&gt;里面的&lt;code&gt;g&lt;/code&gt;是个别名，用于 google，还有其他一些内置的别名，如&lt;code&gt;b&lt;/code&gt;是百度的别名。这样当你按&lt;code&gt;sb&lt;/code&gt;的时候就是使用百度来搜索选中文本。参考&lt;a href=&#34;https://SlippyJimmy.github.io/posts/markdown%E8%AF%AD%E6%B3%95%E6%B5%8B%E8%AF%95--%E4%BB%A5surfingkeys%E4%B8%BA%E4%BE%8B/#%E5%9C%A8%E6%90%9C%E7%B4%A2%E6%A0%8F%E9%87%8C%E6%B7%BB%E5%8A%A0%E6%90%9C%E7%B4%A2%E5%88%AB%E5%90%8D&#34;&gt;在搜索栏里添加搜索别名&lt;/a&gt;来添加你自己的搜索别名，尤其那些用于公司内部的搜索。&lt;/p&gt;
&lt;p&gt;此外，还有&lt;code&gt;sog&lt;/code&gt;可以使用 google 在本站搜索选中文本。在这个&lt;code&gt;sog&lt;/code&gt;里面，&lt;code&gt;s&lt;/code&gt;是 search_leader_key，&lt;code&gt;o&lt;/code&gt;是 only_this_site_key，&lt;code&gt;g&lt;/code&gt;是搜索别名。&lt;/p&gt;
&lt;p&gt;search_leader_key(&lt;code&gt;s&lt;/code&gt;)加上大写的别名(&lt;code&gt;G&lt;/code&gt;)会打开搜索框让你可以修改添加搜索内容，再用 Google 搜索。其它别名和你通过&lt;code&gt;addSearchAliasX&lt;/code&gt;添加的别名，大写的都可以这样工作。&lt;/p&gt;
&lt;h2 id=&#34;类-vim-标示&#34;&gt;类 vim 标示&lt;/h2&gt;
&lt;p&gt;简单说，vim 中的 marks 就是按&lt;code&gt;m&lt;/code&gt;，然后跟一个字符（0-9 / a-z / A-Z），标示一下当前网址。之后，你随时按&lt;code&gt;&#39;&lt;/code&gt;跟上你定义的那个标示符，就会跳转到该网址。&lt;/p&gt;
&lt;p&gt;除了&lt;code&gt;m&lt;/code&gt;键创建标示外，你还可以从收藏夹里按住 Ctrl，加上标示符来创建。如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;按下&lt;code&gt;b&lt;/code&gt;打开收藏夹。&lt;/li&gt;
&lt;li&gt;随便输点啥，定位到你要标示的网址。&lt;/li&gt;
&lt;li&gt;按住 Ctrl + Shift，加上你选中的标示符，比如&lt;code&gt;f&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;之后，按&lt;code&gt;&#39;F&lt;/code&gt;就可以直接打开该网址来。&lt;/p&gt;
&lt;p&gt;这个功能对那些你需要经常访问对网址很有用，两个键直达。&lt;code&gt;om&lt;/code&gt;可以查看你已创建的标示。&lt;/p&gt;
&lt;h2 id=&#34;切换标签页&#34;&gt;切换标签页&lt;/h2&gt;
&lt;p&gt;默认情况下，按&lt;code&gt;T&lt;/code&gt;会显示所有已打开标签页，然后按相应的提示键可以切到该标签页。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/288207/10544636/245447f6-7457-11e5-8372-62b8f6337158.png&#34; alt=&#34;tabs_overlay&#34;&gt;&lt;/p&gt;
&lt;p&gt;这里有个设置&lt;code&gt;settings.tabsThreshold&lt;/code&gt;，当然打开的标签页总数超过它时，再按空格就会使用搜索栏来选择标签。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/288207/10544630/1fbdd02c-7457-11e5-823c-14411311c315.png&#34; alt=&#34;tabs_omnibar&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果你希望一直用搜索栏来选择标签页，可使用如下设置:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mapkey(&#39;&amp;lt;Space&amp;gt;&#39;, &#39;Choose a tab with omnibar&#39;, function() {
    Front.openOmnibar({type: &amp;quot;Tabs&amp;quot;});
});
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;效果相当于：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;settings.tabsThreshold = 0;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;无论是否在搜索栏里，标签页都按最近使用的顺序列出。如果你希望按标签页原本的顺序列出，可以设置：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;settings.tabsMRUOrder = false;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;命令&#34;&gt;命令&lt;/h2&gt;
&lt;p&gt;用&lt;code&gt;:&lt;/code&gt;打开搜索栏可用于执行命令，命令执行结果会显示在搜索栏下方。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// 映射不同的按键到该命令，但采用不同的参数。
map(&#39;spa&#39;, &#39;:setProxyMode always&#39;);
map(&#39;spb&#39;, &#39;:setProxyMode byhost&#39;);
map(&#39;spd&#39;, &#39;:setProxyMode direct&#39;);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;除了命令，你还可以执行各类简单 js 代码。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/288207/11527801/fadee82c-991d-11e5-92e9-b054796a6a75.png&#34; alt=&#34;commands_in_omnibar&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;顺滑滚动&#34;&gt;顺滑滚动&lt;/h2&gt;
&lt;p&gt;所有可以滚动的对象都默认支持顺滑滚动，如下可以关掉顺滑特性：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;settings.smoothScroll = false;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;j&lt;/code&gt;/&lt;code&gt;k&lt;/code&gt; 按一步 70 像素的距离滚动，你可以定制步长：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;settings.scrollStepSize = 140;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;会话管理&#34;&gt;会话管理&lt;/h2&gt;
&lt;p&gt;用 Surfingkeys 在 Chrome 里保存会话相当于保存所有标签页的地址，打开会话则相当于在不同的标签页中打开所有保存其中的网页地址，所以会话基本上就是一个网页地址列表，每个会话有自己的名字。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ZZ&lt;/code&gt;会保存所有当前标签页到一个名为&lt;code&gt;LAST&lt;/code&gt;的会话，然后退出。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ZR&lt;/code&gt;恢复名为&lt;code&gt;LAST&lt;/code&gt;的会话。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ZQ&lt;/code&gt;就只退出，不保存当前会话。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;你可以在命令模式下创建／管理多个不同名称的会话。按&lt;code&gt;:&lt;/code&gt;打开命令窗口，然后输入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;createSession works
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;就会创建一个名为&lt;code&gt;works&lt;/code&gt;的会话，要打开该会话使用如下命令：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;openSession works
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;列出已保存的所有会话：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;listSession
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;删除某个会话：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;deleteSession works
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;前缀数字可多次重复相应操作&#34;&gt;前缀数字可多次重复相应操作&lt;/h2&gt;
&lt;p&gt;如果需要重复多次某个操作，可以在按该映射键之前按下相应的数字，比如&lt;code&gt;3d&lt;/code&gt;，就会往下滚 3 页。这种方法同样适用于标签操作，比如，你现在在第一个标签页，你想切换到第四个标签页，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;按&lt;code&gt;3R&lt;/code&gt;就可以&lt;/li&gt;
&lt;li&gt;&lt;code&gt;3E&lt;/code&gt;会切回到第一个标签页&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另一个例子是移动标签页，假设你现在开着 23 个标签页，你在第 12 个，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;11&amp;lt;&amp;lt;&lt;/code&gt; 就把当前标签页移到第一个&lt;/li&gt;
&lt;li&gt;&lt;code&gt;10&amp;gt;&amp;gt;&lt;/code&gt; 则会把它移到最后一个&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通常情况，你不需要去数多少个标签页，如果你只是想移动到开头或者结尾的话，你按一个足够大的数字就可以，比如&lt;code&gt;99&amp;lt;&amp;lt;&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&#34;开关热键&#34;&gt;开关热键&lt;/h2&gt;
&lt;p&gt;默认情况下，按&lt;code&gt;Alt-s&lt;/code&gt;可以在当前站点开关 Surfingkeys。当 Surfingkeys 处于关闭状态时，除了热键，其它所有按键映射都停止工作。用如下设置修改热键：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;map(&#39;&amp;lt;Ctrl-i&amp;gt;&#39;, &#39;&amp;lt;Alt-s&amp;gt;&#39;); // 热键只能是一个按键，但可以带辅助按键，不能是`gg`这样的一串按键。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;当 Surfingkeys 在某个网站被&lt;code&gt;Alt-s&lt;/code&gt;关掉时，这个状态会被保存在设置里，如&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;blacklist&amp;quot;: {
    &amp;quot;https://github.com&amp;quot;: 1
},
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;再按一次&lt;code&gt;Alt-s&lt;/code&gt;会从 settings.blacklist 中删除该站点。这类状态并不保存在设置脚本里，你可以按&lt;code&gt;yj&lt;/code&gt;把当前所有设置复制到系统剪贴板，然后粘贴到文本编辑器里查看。&lt;/p&gt;
&lt;p&gt;另一个禁用 Surfingkeys 的方法是用&lt;code&gt;settings.blacklistPattern&lt;/code&gt;，请参考&lt;a href=&#34;https://github.com/brookhong/Surfingkeys/issues/63&#34;&gt;regex for disabling&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;代理设置&#34;&gt;代理设置&lt;/h2&gt;
&lt;p&gt;SwitchySharp 是个很好的代理管理插件，但我的用法很简单，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建一个使用 PAC 脚本的配置。&lt;/li&gt;
&lt;li&gt;在 PAC 脚本里维护一个网站列表，如果当前所访问的站点在其中就使用代理。&lt;/li&gt;
&lt;li&gt;当碰到一个站点是被墙的，就把这个网站加入列表。&lt;/li&gt;
&lt;li&gt;然后点击 SwitchySharp 的图标重载配置。&lt;/li&gt;
&lt;li&gt;有时也会点击图标在配置之间切换。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;其中需要手工编辑 PAC 脚本，鼠标点击 SwitchySharp 图片切换重载配置，因此我把代理设置的功能集成进来，并提供相关的命令和快捷键。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;setProxy, 设置代理，示例如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  setProxy 192.168.1.100:8080
  setProxy 127.0.0.1:1080 SOCKS5
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;setProxyMode, 设置代理模式，有五种模式：direct, byhost, bypass, always, system 和 clear。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  direct      Chrome不使用代理访问任何网站。
  byhost      Chrome只在访问你通过`addProxySite`命令添加过的网站时使用代理。你可以添加多条映射，让不同的网站使用不同的代理。
  bypass      Chrome使用代理访问所有网站，除了通过`addProxySite`命令添加过的网站。
  always      Chrome使用代理访问所有网站。
  system      Chrome使用操作系统设置的代理。
  clear       Surfingkeys不管代理，有其他插件管理，也就是禁用Surfingkeys的代理管理功能, 这是默认模式。
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;addProxySite, removeProxySite, toggleProxySite, 管理你需要通过代理访问的网站，比如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  addProxySite google.com,facebook.com,twitter.com
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;proxyInfo, 列出你当前的代理设置，包括用以上命令设置的信息。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;cp&lt;/code&gt;, 切换当前站点的代理设置，即是否使用代理访问当前站点。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;spa&lt;/code&gt;, &lt;code&gt;:setProxyMode always&lt;/code&gt;快捷键。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;spb&lt;/code&gt;, &lt;code&gt;:setProxyMode byhost&lt;/code&gt;快捷键。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;spc&lt;/code&gt;, &lt;code&gt;:setProxyMode clear&lt;/code&gt;快捷键。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;spd&lt;/code&gt;, &lt;code&gt;:setProxyMode direct&lt;/code&gt;快捷键。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;sps&lt;/code&gt;, &lt;code&gt;:setProxyMode system&lt;/code&gt;快捷键。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;spi&lt;/code&gt;, &lt;code&gt;:proxyInfo&lt;/code&gt;快捷键。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;vim-编辑器或者-emacs-编辑器&#34;&gt;VIM 编辑器或者 Emacs 编辑器&lt;/h2&gt;
&lt;p&gt;Surfingkeys 集成了 ACE 里的 VIM 编辑器，用于：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;编辑网页上的各类文本输入框。&lt;/li&gt;
&lt;li&gt;编辑 URL 并在新标签页打开&lt;/li&gt;
&lt;li&gt;编辑设置&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;你可以加上如下设置来使用 Emacs 按键：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;settings.aceKeybindings = &amp;quot;emacs&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;使用 Emacs 按键时，用&lt;code&gt;C-x C-s&lt;/code&gt;来保存你的输入。&lt;/p&gt;
&lt;h3 id=&#34;编辑网页上的各类文本输入框&#34;&gt;编辑网页上的各类文本输入框&lt;/h3&gt;
&lt;p&gt;在 Normal 模式，按大写的&lt;code&gt;I&lt;/code&gt;，然后按相应的字母选择一个输入框。这时会打开一个 VIM 编辑器。对于单行输入框&lt;code&gt;input&lt;/code&gt;和多行输入框&lt;code&gt;textarea&lt;/code&gt;，打开的 VIM 编辑器会有点细微的不同。&lt;/p&gt;
&lt;p&gt;对于单行输入框&lt;code&gt;input&lt;/code&gt;，打开的 VIM 编辑器只有一行，你可以通过各类 VIM 按键编辑你的文本，按&lt;code&gt;Enter&lt;/code&gt;或者&lt;code&gt;:w&lt;/code&gt;就会把 VIM 编辑器里的内容写回相应的输入框。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/288207/17644219/75a72b2e-61b3-11e6-8ce2-06c9cc94aeca.gif&#34; alt=&#34;input_with_vim&#34;&gt;&lt;/p&gt;
&lt;p&gt;对于多行输入框&lt;code&gt;textarea&lt;/code&gt;，打开的 VIM 编辑器有多行，在你完成编辑之后，按&lt;code&gt;Ctrl-Enter&lt;/code&gt;或者&lt;code&gt;:w&lt;/code&gt;就会把 VIM 编辑器里的内容写回相应的输入框。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/288207/17644217/75a27e44-61b3-11e6-8f21-9cd79d3c5776.gif&#34; alt=&#34;textarea_with_vim&#34;&gt;&lt;/p&gt;
&lt;p&gt;对于下拉列表&lt;code&gt;select&lt;/code&gt;，打开的 VIM 编辑器有多行，但你不能编辑其中的文本，你只能搜索你需要的选项，跳到那一行，然后按&lt;code&gt;Enter&lt;/code&gt;选中它。这对那种有几十个以上选项的下拉列表尤其有用。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/288207/17644218/75a458a4-61b3-11e6-8ce7-eedcc996745c.gif&#34; alt=&#34;select_with_vim&#34;&gt;&lt;/p&gt;
&lt;p&gt;按键&lt;code&gt;Esc&lt;/code&gt;或&lt;code&gt;:q&lt;/code&gt;可退出 VIM 编辑器，不写回输入。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Tab&lt;/code&gt;键可以从当前页面上搜索匹配的词组，然后按空格键补齐。&lt;/p&gt;
&lt;p&gt;如果你是通过按键&lt;code&gt;i&lt;/code&gt;或者鼠标点击进入一个输入框的，你可以正常修改输入框中的文本，也可以随时按&lt;code&gt;Ctrl-i&lt;/code&gt;打开一个 VIM 编辑器。&lt;/p&gt;
&lt;p&gt;记住在插入模式，按&lt;code&gt;Ctrl-i&lt;/code&gt;打开 VIM 编辑器。&lt;/p&gt;
&lt;h3 id=&#34;编辑-url-并在新标签页打开&#34;&gt;编辑 URL 并在新标签页打开&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;su&lt;/code&gt;可以打开一个 VIM 编辑器来编辑当前 URL，然后按&lt;code&gt;Enter&lt;/code&gt;或者&lt;code&gt;:w&lt;/code&gt;就会打开编辑后的 URL，就像一个地址栏一样，但这是一个支持 vim 按键的地址栏。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Tab&lt;/code&gt;键可以从书签和访问历史中搜索匹配的 URL，然后按空格键补齐。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/288207/17644220/75f8eedc-61b3-11e6-9630-da2250ac5f10.gif&#34; alt=&#34;url_with_vim&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;编辑设置&#34;&gt;编辑设置&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;se&lt;/code&gt;打开设置编辑器, &lt;code&gt;:w&lt;/code&gt;保存设置。&lt;/p&gt;
&lt;h2 id=&#34;点命令重复前一个操作&#34;&gt;点命令重复前一个操作&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/brookhong/Surfingkeys/issues/67&#34;&gt;重复前一个操作&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;所有 normal 模式下的按键都可以由点来重复，除了那些在创建时指定&lt;code&gt;repeatIgnore&lt;/code&gt;为&lt;code&gt;true&lt;/code&gt;的按键，如&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mapkey(&#39;e&#39;, &#39;#2Scroll a page up&#39;, function() {
    Normal.scroll(&amp;quot;pageUp&amp;quot;);
}, {repeatIgnore: true});
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这样，&lt;code&gt;.&lt;/code&gt;就不会往上翻页，即使你刚刚按了&lt;code&gt;e&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&#34;markdown-预览&#34;&gt;Markdown 预览&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;复制 markdown 代码到系统剪贴板。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sm&lt;/code&gt;预览剪贴板里的 markdown。&lt;/li&gt;
&lt;li&gt;在预览页，再按&lt;code&gt;sm&lt;/code&gt;会打开 vim 编辑器编辑 markdown。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:wq&lt;/code&gt;刷新预览。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;r&lt;/code&gt;可以从系统剪贴板里重新加载 markdown.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/288207/17669897/0b6fbaf6-6342-11e6-8583-86eb8691190d.gif&#34; alt=&#34;markdown&#34;&gt;&lt;/p&gt;
&lt;p&gt;Surfingkeys 默认使用&lt;a href=&#34;https://github.com/chjj/marked&#34;&gt;这个 markdown 分析器&lt;/a&gt;，如果你想用&lt;a href=&#34;https://developer.github.com/v3/markdown/&#34;&gt;github 提供的 API&lt;/a&gt;，可以设置：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;settings.useLocalMarkdownAPI = false;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;截屏&#34;&gt;截屏&lt;/h2&gt;
&lt;p&gt;如果你需要截屏，下面这些按键用得上，尤其是当你想截长屏／或页面中某个可以滚动的 DIV 时。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;yg&lt;/code&gt; 截当前页的屏。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;yG&lt;/code&gt; 滚动截完整页。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;yS&lt;/code&gt; 截当前滚动对象的屏。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;按完以上任一快捷键之后，会弹出你所截取的图片，然后你可以用鼠标（😢）右键单击图片来保存或者复制。&lt;/p&gt;
&lt;h2 id=&#34;mermaid-图形生成器&#34;&gt;mermaid 图形生成器&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/knsv/mermaid&#34;&gt;Mermaid&lt;/a&gt; 是一个从文本生成各类图形如类图／时序图的工具。Surfingkeys 提供了一个页面，可以从系统剪贴板里读取文本并生成图形，并可以用 vim 编辑器编辑。&lt;/p&gt;
&lt;p&gt;按&lt;code&gt;Ctrl-Alt-d&lt;/code&gt;打开。&lt;/p&gt;
&lt;h2 id=&#34;pdf-阅读器&#34;&gt;PDF 阅读器&lt;/h2&gt;
&lt;p&gt;为了支持 PDF 文件，Surfingkeys 集成了来自&lt;a href=&#34;https://github.com/mozilla/pdf.js&#34;&gt;pdf.js&lt;/a&gt;的 PDF 阅读器。当你用 Chrome 打开一个 PDF 文件时，这个 PDF 阅读器就会打开，这样所有 Surfingkeys 的按键都可以用了。&lt;/p&gt;
&lt;p&gt;如果希望使用 Chrome 默认的 PDF 阅读器打开，可以按&lt;code&gt;;s&lt;/code&gt;切换。&lt;/p&gt;
&lt;p&gt;当你使用 Chrome 默认 PDF 阅读器时，有些按键还是可用的，但部分按键比如滚动／可视模式下的按键就不可用了。&lt;/p&gt;
&lt;h2 id=&#34;配置参考&#34;&gt;配置参考&lt;/h2&gt;
&lt;h3 id=&#34;添加一个按键映射&#34;&gt;添加一个按键映射&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;mapkey(keystroke, help_string, action_code, [options])
&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;参数&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;keystroke&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;字符串，触发某个操作的按键&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;help_string&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;字符串，帮助描述，会自动出现在&lt;code&gt;u&lt;/code&gt;打开的帮助小窗里。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;action_code&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;函数，一个 Javascript 函数。如果该函数需要一个参数，下一个按键会作为参数传给这个函数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;options&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;object, 字段属性如下&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;domain&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;正则表达式[可选]，表明只有当域名匹配时，该按键映射才会生效。比如，&lt;code&gt;/github\.com/i&lt;/code&gt; 说明按键映射只在 github.com 上生效。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;repeatIgnore&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;布尔值[可选]，是否可通过点命令重复该按键。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;一个示例，在不同网站上映射相同的按键到不同的操作：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mapkey(&#39;zz&#39;, &#39;Choose a tab&#39;, function() {
    Front.chooseTab();
}, {domain: /github\.com/i});
mapkey(&#39;zz&#39;, &#39;Show usage&#39;, function() {
    Front.showUsage();
}, {domain: /google\.com/i});
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可视化模式下的 mapkey&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vmapkey(keystroke, help_string, action_code, [options])
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;映射按键到其他按键&#34;&gt;映射按键到其他按键&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;map(new_keystroke, old_keystroke, [domain_pattern], [new_annotation])

imap(new_keystroke, old_keystroke, [domain_pattern], [new_annotation])

vmap(new_keystroke, old_keystroke, [domain_pattern], [new_annotation])

cmap(new_keystroke, old_keystroke, [domain_pattern], [new_annotation])
&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;参数&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;new_keystroke&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;字符串，将要使用的按键。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;old_keystroke&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;字符串，将被替换的按键。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;domain_pattern&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;正则表达式[可选]，表明只有当域名匹配时，该按键映射才会生效。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;new_annotation&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;字符串[可选], 如果提供了就用作帮助描述，否则就用 old_keystroke 对应的帮助描述。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;删除一个按键映射&#34;&gt;删除一个按键映射&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;unmap(keystroke, [domain_pattern])

iunmap(keystroke, [domain_pattern])

vunmap(keystroke, [domain_pattern])
&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;参数&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;keystroke&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;字符串，将要删除的按键。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;domain_pattern&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;正则表达式[可选]，表明只有当域名匹配时，该操作会生效。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;删除所有按键映射&#34;&gt;删除所有按键映射&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;unmapAllExcept(keystrokes, [domain_pattern])
&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;参数&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;keystrokes&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;字符串数组，将要删除的按键。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;domain_pattern&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;正则表达式[可选]，表明只有当域名匹配时，该操作会生效。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;示例,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;unmapAllExcept([&#39;f&#39;, &#39;/&#39;, &#39;?&#39;]);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;在搜索栏里添加搜索别名&#34;&gt;在搜索栏里添加搜索别名&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;addSearchAlias(alias, prompt, search_url, suggestion_url, callback_to_parse_suggestion);
&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;参数&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;alias&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;一个以上字符，用作搜索别名。当你在搜索栏里输入它之后，再按空格键，会切换到对应的搜索引擎。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;prompt&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;提示符，说明当前所用搜索引擎。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;search_url&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;搜索引擎搜索地址。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;suggestion_url[可选]&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;搜索自动完成 URL，如果提供的话，搜索栏会列出相关关键字。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;callback_to_parse_suggestion[可选]&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;解析 suggestion_url 返回的内容，列出相关关键字。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre&gt;&lt;code&gt;addSearchAliasX(alias, prompt, search_url, search_leader_key, suggestion_url, callback_to_parse_suggestion, only_this_site_key);
&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;参数&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;search_leader_key&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;一个以上字符，如果你不想使用默认的&lt;code&gt;s&lt;/code&gt;键。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;only_this_site_key&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;一个以上字符，如果你不想使用默认的&lt;code&gt;o&lt;/code&gt;键。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;这是一个扩展版本，除了往搜索栏里添加搜索别名，还会创建一个按键映射，由&lt;code&gt;search_leader_key&lt;/code&gt;加上&lt;code&gt;alias&lt;/code&gt;组成，对应的操作就是搜索选中文本。比如，下面这行，&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;addSearchAliasX(&#39;s&#39;, &#39;stackoverflow&#39;, &#39;http://stackoverflow.com/search?q=&#39;, &#39;o&#39;);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;就相当于&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;addSearchAlias(&#39;s&#39;, &#39;stackoverflow&#39;, &#39;http://stackoverflow.com/search?q=&#39;);
mapkey(&#39;os&#39;, &#39;Search Selected with stackoverflow&#39;, function() {
    searchSelectedWith(&amp;quot;http://stackoverflow.com/search?q=&amp;quot;);
});
vmapkey(&#39;os&#39;, &#39;Search Selected with stackoverflow&#39;, function() {
    searchSelectedWith(&amp;quot;http://stackoverflow.com/search?q=&amp;quot;);
});
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;删除搜索别名及相关绑定&#34;&gt;删除搜索别名及相关绑定&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;removeSearchAliasX(alias, search_leader_key, only_this_site_key);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;搜索栏辅助函数&#34;&gt;搜索栏辅助函数&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Omnibar.listWords(&amp;lt;array of words&amp;gt;)
Omnibar.html(&amp;lt;any html snippets&amp;gt;)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;修改内嵌-vim-编辑器里的按键&#34;&gt;修改内嵌 vim 编辑器里的按键&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;aceVimMap(lhs, rhs, ctx)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;例如，&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;aceVimMap(&#39;jk&#39;, &#39;&amp;lt;Esc&amp;gt;&#39;, &#39;insert&#39;);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;属性设置列表&#34;&gt;属性设置列表&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;属性&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;默认值&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;解释&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Hints.characters&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&amp;quot;asdfgqwertzxcvb&amp;quot;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;可用于生成拨号盘的字符。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Hints.numericHints&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;false&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;是否使用数字生成拨号字符，如果打开，你可以输入英文字符过滤链接。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Hints.scrollKeys&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&amp;quot;0jkhlG$&amp;quot;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;在拨号模式下可用于滚屏的按键，你通常不需要修改，除非你改了&lt;code&gt;Hints.characters&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.showModeStatus&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;false&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;是否在状态栏显示当前模式。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.showProxyInStatusBar&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;false&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;是否在状态栏显示代理信息。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.richHintsForKeystroke&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;500&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;超过指定毫秒数后显示按键提示，如果指定值等于 0 会禁用按键提示。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.useLocalMarkdownAPI&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;true&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;是否使用&lt;a href=&#34;https://github.com/chjj/marked&#34;&gt;chjj/marked&lt;/a&gt;解析 markdown，否则使用 github API。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.focusOnSaved&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;true&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;是否在退出内嵌 VIM 编辑器后把光标定位到输入框。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.omnibarMaxResults&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;10&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;搜索栏下面每页显示多少条结果。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.omnibarPosition&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&amp;quot;middle&amp;quot;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;定义搜索框位置。 [&amp;quot;middle&amp;quot;, &amp;quot;bottom&amp;quot;]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.omnibarSuggestionTimeout&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;200&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;设置触发搜索引擎提示的超时，当按键过去设定毫秒后才发起搜索引擎提示的请求，这样避免每次按键就触发请求。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.focusFirstCandidate&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;false&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;是否在搜索栏下面自动选择第一个匹配的结果。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.tabsThreshold&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;9&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;当打开标签页的数量超过设定值时，使用搜索栏来查找标签页。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.hintsThreshold&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;10000&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;当普通的可点击元素(a, button, select, input, textarea)数量超过设定值时，Surfingkeys 就不会为其它可点击的元素显示拨号键了。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.clickableSelector&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&amp;quot;&amp;quot;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;自定义 CSS selector 用于 f 键选择无法检测到的可点击元素，例如&amp;quot;*.jfk-button, *.goog-flat-menu-button&amp;quot;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.clickablePat&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;/(https?|thunder|magnet)://\S+/ig&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;用于检测文字中可点击链接的正则表达式，你可以按&lt;code&gt;O&lt;/code&gt;打开检测到的链接。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.editableSelector&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;div.CodeMirror-scroll,div.ace_content&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;额外 CSS selector 以自定义可编辑元素。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.smoothScroll&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;true&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;是否启用顺滑滚动。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.modeAfterYank&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&amp;quot;&amp;quot;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;在可视模式下，在复制文本之后，回到哪种模式，[&amp;quot;&amp;quot;, &amp;quot;Caret&amp;quot;, &amp;quot;Normal&amp;quot;]，默认是&amp;quot;&amp;quot;，指保持当前模式。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.scrollStepSize&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;70&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;j&lt;/code&gt;/&lt;code&gt;k&lt;/code&gt;滚动时每一步的大小。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.scrollFriction&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;在滚动一步之后，开始连续滚动所需要的力。数字大，表示需要更大的力来启动连续滚动，这样在开始连续滚动时会有一个抖动，但也能保证第一步的滚动幅度是精确的。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.nextLinkRegex&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;/((&amp;gt;&amp;gt;|next)+)/i&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;匹配下一页链接的正则表达式。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.prevLinkRegex&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;/((&amp;lt;&amp;lt;|prev(ious)?)+)/i&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;匹配上一页链接的正则表达式。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.hintAlign&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&amp;quot;center&amp;quot;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;拨号键与它对应的目标如何对齐。[&amp;quot;left&amp;quot;, &amp;quot;center&amp;quot;, &amp;quot;right&amp;quot;]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.defaultSearchEngine&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&amp;quot;g&amp;quot;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;搜索栏里的默认搜索引擎。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.blacklistPattern&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;undefined&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;如果当前访问的网站匹配设定的正则表达式，则禁用 Surfingkeys。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.focusAfterClosed&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&amp;quot;right&amp;quot;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;关掉当前标签页后，切换到哪一侧的标签页。[&amp;quot;left&amp;quot;, &amp;quot;right&amp;quot;]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.repeatThreshold&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;99&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;操作可重复最多次数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.tabsMRUOrder&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;true&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;查找打开标签页时，是否按最近访问顺序列出所有标签页。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.historyMUOrder&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;true&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;查找访问记录时，是否按最常访问顺序列出所有访问记录。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.newTabPosition&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&#39;default&#39;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;在哪个位置创建新标签页。[&amp;quot;left&amp;quot;, &amp;quot;right&amp;quot;, &amp;quot;first&amp;quot;, &amp;quot;default&amp;quot;]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.interceptedErrors&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;[]&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;指明 Surfingkeys 为哪些错误显示错误页，这样在这些错误页你依然可以使用 Surfingkeys。例如，[&amp;quot;*&amp;quot;]为所有错误显示错误页，[&amp;quot;net::ERR_NAME_NOT_RESOLVED&amp;quot;]只为 ERR_NAME_NOT_RESOLVED 显示错误页。更多错误请参考&lt;a href=&#34;https://github.com/adobe/chromium/blob/master/net/base/net_error_list.h&#34;&gt;net_error_list.h&lt;/a&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.startToShowEmoji&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;在冒号后输入多少个字符才显示表情下拉选项。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.language&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;undefined&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;帮助中使用何种语言，目前只支持中英文，设为&amp;quot;zh-CN&amp;quot;显示中文帮助。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.stealFocusOnLoad&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;true&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;是否阻止光标定位到输入框，默认为 true，这样我们可以在页面加载结束之后直接使用 Surfingkeys 提供的各类按键，否则需要按 Esc 退出输入框。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.enableAutoFocus&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;true&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;是否允许光标自动定位到动态显示的输入框里。这个设置和&lt;code&gt;stealFocusOnLoad&lt;/code&gt;不同，那个只是在页面加载完成后跳出输入框。比如，有一个页面上有个隐藏的输入框，它只在用户点击某个链接后显示出来。如果你不想这个刚显示出来的输入框自动获得焦点，就可以把这个设置设为 false。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.theme&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;undefined&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;修改 Surfingkeys 界面风格。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.caseSensitive&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;false&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;网页/搜索框内搜索是否大小写敏感。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.smartCase&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;true&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;当搜索关键字里含有大写字符时，是否自动设为大小写敏感。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.cursorAtEndOfInput&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;true&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;是否在进入输入框时把光标放在结尾，为 false 时，光标将放在上次离开输入框时的位置。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.digitForRepeat&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;true&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;是否把数字输入当作重复次数，为 false 时，数字可作为普通按键。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.editableBodyCare&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;true&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;当焦点定位到一个可编辑的元素时，Insert 模式会自动激活，所以如果某个 window/iframe 里的 document.body 本身就是可编辑的（例如 docs.google.com），Insert 模式会一直处于激活状态，这样所有 Normal 模式下的按键都不可用了。当&lt;code&gt;editableBodyCare&lt;/code&gt;为&lt;code&gt;true&lt;/code&gt;时，Insert 模式在这种情况下不会自动激活。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.ignoredFrameHosts&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;[&amp;quot;https://tpc.googlesyndication.com&amp;quot;]&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;当用&lt;code&gt;w&lt;/code&gt;切换 frame 时，你可以用这个设置来过滤掉某些 frame，比如那些做广告的 frame。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.aceKeybindings&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&amp;quot;vim&amp;quot;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;改为&amp;quot;emacs&amp;quot;可以在 ACE 编辑器里使用 Emacs 按键。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.caretViewport&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;null&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;按&lt;code&gt;[top, left, bottom, right]&lt;/code&gt;格式设置，可以限制按&lt;code&gt;v&lt;/code&gt;进入可视模式时的选择范围。比如&lt;code&gt;[window.innerHeight / 2 - 10, 0, window.innerHeight / 2 + 10, window.innerWidth]&lt;/code&gt;会使 Surfingkeys 只会为显示在窗口中间的文字生成拨号盘字符。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;settings.mouseSelectToQuery&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;[]&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;所有启用鼠标选择查询功能的网站列表。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;settingstheme-示例修改状态栏字体&#34;&gt;settings.theme 示例，修改状态栏字体&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;settings.theme = `
    #sk_status, #sk_find {
        font-size: 20pt;
    }
}`;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;编译&#34;&gt;编译&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;npm install
npm run build

npm run build firefox # build webextension for firefox
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;credits&#34;&gt;Credits&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jquery/jquery&#34;&gt;jQuery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mikedeboer/trie&#34;&gt;TRIE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ajaxorg/ace&#34;&gt;ACE vim editor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/chjj/marked&#34;&gt;markdown parser&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mozilla/pdf.js&#34;&gt;pdf.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/philc/vimium&#34;&gt;vimium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/1995eaton/chromium-vim&#34;&gt;cVim&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT License&lt;/p&gt;
</content>
            
            
            
            
            
                
                    
                
                    
                
            
        </entry>
    
        <entry>
            <title type="text">Mac装机清单</title>
            <link rel="alternate" type="text/html" href="https://SlippyJimmy.github.io/posts/mac%E8%A3%85%E6%9C%BA%E6%B8%85%E5%8D%95/" />
            <id>https://SlippyJimmy.github.io/posts/mac%E8%A3%85%E6%9C%BA%E6%B8%85%E5%8D%95/</id>
            <updated>2023-09-07T11:33:47&#43;08:00</updated>
            <published>2019-12-24T11:44:40&#43;08:00</published>
            <author>
                    <name>SlippyJimmy</name>
                    <uri>https://io-oi.me/</uri>
                    <email>1824968955@qq.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">MAC装机清单 一、开发类 iTerm2 XCode 1 $ xcode-select --install Homebrew 1 $ /usr/bin/ruby -e &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;#34; 更换国内源 1 2 3 4 5 6 7 git -C &amp;#34;$(brew --repo)&amp;#34;……</summary>
            
                <content type="html">&lt;h1 id=&#34;mac装机清单&#34;&gt;MAC装机清单&lt;/h1&gt;
&lt;h2 id=&#34;一开发类&#34;&gt;一、开发类&lt;/h2&gt;
&lt;h3 id=&#34;iterm2&#34;&gt;iTerm2&lt;/h3&gt;
&lt;h3 id=&#34;xcode&#34;&gt;XCode&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ xcode-select --install
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;homebrew&#34;&gt;Homebrew&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ /usr/bin/ruby -e &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;更换国内源&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git -C &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;brew --repo&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git -C &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;brew --repo homebrew/core&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git -C &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;brew --repo homebrew/cask&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-cask.git
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;brew update
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://lug.ustc.edu.cn/wiki/mirrors/help/brew.git&#34;&gt;参考&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;禁止自动更新&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ vim .zshrc
# 加入以下代码
export HOMEBREW_NO_AUTO_UPDATE=true
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;shell&#34;&gt;shell&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$SHELL&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;# 查看默认Shell&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ chsh -s /bin/zsh	&lt;span class=&#34;c1&#34;&gt;# 将Shell改为zsh&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;em&gt;注意：更改后需重启终端&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;oh-my-zsh&#34;&gt;Oh-my-zsh&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;安装命令：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sh -c &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;主题配置&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ZSH_THEME=&amp;#34;rkj-repos&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;插件&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;plugins=(
    git
    extract
    z
    zsh-syntax-highlighting
)
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;kvim&#34;&gt;kvim&lt;/h3&gt;
&lt;h3 id=&#34;vscode&#34;&gt;Vscode&lt;/h3&gt;
&lt;h2 id=&#34;二基础类&#34;&gt;二、基础类&lt;/h2&gt;
&lt;h3 id=&#34;浏览器&#34;&gt;浏览器&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Chrome&lt;/li&gt;
&lt;li&gt;火狐开发版&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;写作笔记&#34;&gt;写作&amp;amp;笔记&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Typora&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;印象笔记&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;图片&#34;&gt;图片&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;iSmartPhoto	看图&lt;/li&gt;
&lt;li&gt;Xnip    截图&lt;/li&gt;
&lt;li&gt;iPic.   Markdown图床，配合Typora&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;百度输入法&#34;&gt;百度输入法&lt;/h3&gt;
&lt;p&gt;小鹤双拼&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://srf.baidu.com/input/mac.html&#34;&gt;下载链接&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;v2rayx&#34;&gt;V2rayX&lt;/h3&gt;
&lt;h3 id=&#34;proxychains-ng&#34;&gt;Proxychains-ng&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;安装&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ brew install proxychains-ng
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;配置&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo vim /usr/local/etc/proxychains.conf
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 在末尾的 [ProxyList] 下加入代理类型，注意区分端口号&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;socks5 127.0.0.1 &lt;span class=&#34;m&#34;&gt;1081&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://www.jianshu.com/p/812f163cb1e2&#34;&gt;参考&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;三娱乐类&#34;&gt;三、娱乐类&lt;/h2&gt;
&lt;h3 id=&#34;qq&#34;&gt;QQ&lt;/h3&gt;
&lt;h3 id=&#34;微信&#34;&gt;微信&lt;/h3&gt;
&lt;h3 id=&#34;网易云&#34;&gt;网易云&lt;/h3&gt;
</content>
            
            
            
            
            
                
                    
                
                    
                
            
        </entry>
    
</feed>
